ARG TARGET=x86_64-unknown-linux-musl
ARG APP=s3
ARG APP_PATH=apps/${APP}/backend
ARG LIB_PATH=packages/rust
ARG DERIVE_LIB_PATH=packages/rust-derive

FROM build AS planner

ARG APP_PATH
ARG LIB_PATH
ARG DERIVE_LIB_PATH

COPY ${APP_PATH}/Cargo.toml ${APP_PATH}/
COPY ${APP_PATH}/entity/Cargo.toml ${APP_PATH}/entity/
COPY ${APP_PATH}/migration/Cargo.toml ${APP_PATH}/migration/
COPY ${LIB_PATH}/Cargo.toml ${LIB_PATH}/
COPY ${DERIVE_LIB_PATH}/Cargo.toml ${DERIVE_LIB_PATH}/
COPY ./Cargo.lock ./Cargo.toml ./

RUN cargo chef prepare --recipe-path recipe.json --bin positron-backend

FROM build AS builder

ARG TARGET
ARG APP_PATH
ARG LIB_PATH
ARG DERIVE_LIB_PATH
ENV TARGET=$TARGET

COPY --from=planner /app/recipe.json .

RUN cargo chef cook --release --target $TARGET

COPY ${APP_PATH}/Cargo.toml ${APP_PATH}/
COPY ${APP_PATH}/src ${APP_PATH}/src
COPY ${APP_PATH}/entity/Cargo.toml ${APP_PATH}/entity/
COPY ${APP_PATH}/entity/src ${APP_PATH}/entity/src
COPY ${APP_PATH}/migration/Cargo.toml ${APP_PATH}/migration/
COPY ${APP_PATH}/migration/src ${APP_PATH}/migration/src
COPY ${LIB_PATH}/Cargo.toml ${LIB_PATH}/
COPY ${LIB_PATH}/src ${LIB_PATH}/src
COPY ${DERIVE_LIB_PATH}/Cargo.toml ${DERIVE_LIB_PATH}/
COPY ${DERIVE_LIB_PATH}/src ${DERIVE_LIB_PATH}/src
COPY ./Cargo.lock ./Cargo.toml ./

RUN cd ${APP_PATH} && cargo build --release --target $TARGET
RUN mv ./target/$TARGET/release/backend ./app

FROM alpine

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

WORKDIR /app
COPY --from=builder /app/app /usr/local/bin/

CMD ["app"]